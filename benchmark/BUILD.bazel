load("//bazel:api.bzl", "modular_py_binary", "modular_py_library", "pkg_files", "requirement", "strip_prefix")

modular_py_binary(
    name = "benchmark_serving",
    testonly = True,
    srcs = ["benchmark_serving.py"],
    imports = ["."],
    visibility = ["//visibility:public"],
    deps = [
        ":benchmark_config",
        ":benchmark_datasets",
        ":sample_workload_utils",
        requirement("aiohttp"),
        requirement("datasets"),
        requirement("huggingface-hub"),
        requirement("numpy"),
        requirement("nvitop"),
        requirement("jinja2"),
        requirement("tqdm"),
        requirement("transformers"),
    ],
)

# TODO: Move / refactor this to interfaces/
modular_py_library(
    name = "sample_workload_utils",
    srcs = ["sample_workload_utils.py"],
    imports = ["."],
    visibility = ["//visibility:public"],
    deps = [
        requirement("msgspec"),
        requirement("pillow"),
        requirement("transformers"),
    ],
)

modular_py_library(
    name = "benchmark_config",
    srcs = ["benchmark_config.py"],
    data = [
        ":benchmark_config_yaml_files",
    ],
    imports = ["."],
    visibility = ["//visibility:public"],
    deps = [
        ":benchmark_datasets",
        "//SDK/lib/API/python/max/pipelines/lib",
    ],
)

modular_py_library(
    name = "benchmark_datasets",
    srcs = ["benchmark_datasets.py"],
    imports = ["."],
    visibility = ["//visibility:public"],
    deps = [
        ":sample_workload_utils",
        requirement("datasets"),
        requirement("huggingface-hub"),
        requirement("numpy"),
        requirement("msgspec"),
        requirement("pillow"),
        requirement("transformers"),
    ],
)

pkg_files(
    name = "benchmark_config_yaml_files",
    srcs = glob(["*.yaml"]),
    visibility = ["//visibility:public"],
)

pkg_files(
    name = "python_files",
    srcs = glob(
        [
            "**/*.py",
        ],
    ),
    prefix = "benchmark",
    strip_prefix = strip_prefix.from_pkg(""),
    visibility = ["//visibility:public"],
)

pkg_files(
    name = "yaml_files",
    srcs = glob(
        [
            "**/*.yaml",
        ],
    ),
    prefix = "benchmark",
    visibility = ["//visibility:public"],
)
