load("//bazel:api.bzl", "modular_py_library", "requirement")

modular_py_library(
    name = "config",
    srcs = ["config.py"],
    deps = [
        requirement("pydantic"),
        requirement("pydantic-settings"),
        "//SDK/lib/API/python/max/serve/kvcache_agent",
        "//SDK/lib/API/python/max/serve/queue",
    ],
)

modular_py_library(
    name = "process_control",
    srcs = ["process_control.py"],
)

modular_py_library(
    name = "serve",
    srcs = glob(
        ["*.py"],
        exclude = [
            "process_control.py",
            "config.py",
            "debug.py",
        ],
    ),
    imports = ["../.."],
    deps = [
        ":config",
        ":debug",
        ":process_control",
        "//SDK/lib/API/python/max/serve/mocks",
        "//SDK/lib/API/python/max/serve/pipelines",
        "//SDK/lib/API/python/max/serve/recordreplay",
        "//SDK/lib/API/python/max/serve/router",
        "//SDK/lib/API/python/max/serve/scheduler",
        "//SDK/lib/API/python/max/serve/schemas",
        "//SDK/lib/API/python/max/serve/telemetry",
        requirement("fastapi"),
        requirement("opentelemetry-api"),
        requirement("prometheus-client"),
        requirement("pydantic-settings"),
        requirement("pyinstrument"),
        requirement("sse-starlette"),
        requirement("transformers"),
        requirement("uvicorn"),
        requirement("uvloop"),
    ],
)

modular_py_library(
    name = "debug",
    srcs = ["debug.py"],
    deps = [
        requirement("fastapi"),
        requirement("pydantic"),
        requirement("pydantic-settings"),
        requirement("pyinstrument"),
    ],
)
