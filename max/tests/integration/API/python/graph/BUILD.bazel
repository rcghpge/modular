load("//bazel:api.bzl", "modular_py_library", "modular_py_test", "requirement")

_NVIDIA_ONLY_TESTS = [
    "test_float8_e4m3fn.py",
    "test_irfft.py",
]

_GPU_ONLY_TESTS = [
    "test_fused_multiply_add.py",
]

_AMD_ONLY_TESTS = [
    "test_fp8_conversion.py",
]

modular_py_library(
    name = "modular_graph_test",
    testonly = True,
    srcs = ["modular_graph_test.py"],
    imports = ["."],
    visibility = ["//visibility:public"],
    deps = [
        "//SDK/integration-test/pipelines/python/test_common",
        "//SDK/lib/API/python/max/driver",
        "//SDK/lib/API/python/max/graph",
        requirement("hypothesis"),
        requirement("torch"),
        requirement("numpy"),
    ],
)

modular_py_test(
    name = "graph",
    size = "large",
    srcs = glob(
        ["*.py"],
        exclude = _AMD_ONLY_TESTS + _GPU_ONLY_TESTS + _NVIDIA_ONLY_TESTS + ["modular_graph_test.py"],
    ),
    data = [
        "//SDK/integration-test:compile_config_ops",
        "//SDK/integration-test:counter_ops",
        "//SDK/integration-test:kernel_verification_ops",
        "//SDK/integration-test:test_user_op",
        "//SDK/integration-test/API:inputs",
        "//SDK/integration-test/API:pytest_inputs",
        "//SDK/lib/API/python/tests/graph/testdata",
    ],
    env = {
        "MODULAR_COUNTER_OPS_PATH": "$(rootpath //SDK/integration-test:counter_ops)",
        "MODULAR_KERNEL_VERIFICATION_OPS_PATH": "$(rootpath //SDK/integration-test:kernel_verification_ops)",
        "MODULAR_COMPILE_CONFIG_OPS_PATH": "$(rootpath //SDK/integration-test:compile_config_ops)",
        "CUSTOM_OPS_PATH": "$(rootpath //SDK/integration-test:test_user_op)",
        "MODULAR_PATH": ".",
        "GRAPH_TESTDATA": "SDK/lib/API/python/tests/graph/testdata",
    },
    gpu_constraints = [
        "//:nvidia_gpu",
        "//:amd_gpu",
    ],  # FIXME: Enable Apple GPU MOCO-2411
    mojo_deps = [
        "//SDK/integration-test:compile_config_ops",
        "//SDK/integration-test:test_user_op",
    ],
    tags = [
        "gpu",
    ],
    deps = [
        ":modular_graph_test",
        "//SDK/lib/API/python/max",
        requirement("torch"),
        requirement("torchvision"),
        requirement("hypothesis"),
    ],
)

modular_py_test(
    name = "nvidia_tests",
    size = "large",
    srcs = _NVIDIA_ONLY_TESTS + ["conftest.py"],
    exec_properties = {
        "test.resources:gpu-memory": "2",
    },
    gpu_constraints = ["//:nvidia_gpu"],
    tags = ["gpu"],
    deps = [
        ":modular_graph_test",
        "//SDK/lib/API/python/max",
    ],
)

# These tests are marked GPU-only due to their size.
# That enables setting the test GPU resources to 2GiB.
modular_py_test(
    name = "gpu_tests",
    size = "large",
    srcs = _GPU_ONLY_TESTS + ["conftest.py"],
    exec_properties = {
        "test.resources:gpu-memory": "2",
    },
    gpu_constraints = ["//:has_gpu"] + select({
        "//:apple_gpu": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),  # FIXME: MOCO-2411
    tags = ["gpu"],
    deps = [
        "//SDK/lib/API/python/max",
        requirement("hypothesis"),
        requirement("torch"),
    ],
)

modular_py_test(
    name = "amd_tests",
    size = "large",
    srcs = _AMD_ONLY_TESTS + ["conftest.py"],
    exec_properties = {
        "test.resources:gpu-memory": "2",
    },
    tags = ["gpu"],
    target_compatible_with = ["//:amd_gpu"],
    deps = [
        ":modular_graph_test",
        "//SDK/lib/API/python/max",
    ],
)
